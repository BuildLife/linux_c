/*Basic lib*/
#define _BSD_SOURCE
#define _USE_BSD 
#include <stdio.h>
#include <stdlib.h>

/*use in true & false type : boolean type*/
#include <stdbool.h>

/*time lib*/
#include <time.h>
#include <unistd.h>

/*Serial port connect*/
#include <fcntl.h>
#include <termios.h>

/*Variable type*/
//#include <bsd/string.h>
#include <string.h>
#include <sys/types.h>
#include <stdint.h>
#include <memory.h>

/*socket include*/
#include <sys/socket.h>
#include <sys/ioctl.h>
#include <sys/select.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <pthread.h>
#include <sys/ioctl.h>
#include <netdb.h>
#include <errno.h>


#include <pcap.h>
#include <net/ethernet.h>
#include <net/if_arp.h>
#include <net/if.h>
#include <netinet/ip.h>
#include <netinet/ip6.h>
#include <netinet/udp.h>
#include <netinet/tcp.h>
#include <netinet/ip_icmp.h>
#include <netinet/igmp.h>
#include <netinet/if_ether.h>

/*For Ctrl+c sending a signal liberary*/
#include <signal.h>
#include <sys/wait.h>
#include <time.h>

#define MAC_ADDRSTRLEN 2*6+5+1

/*For Comport to control*/
#define BAUDRATE B38400
#define _POSIX_SOURCE 1 /*Match with POSIX system*/

#define FALSE 0
#define TRUE 1


typedef struct S_ETH_HEADER
{
	unsigned char dmac[6];  // 6 Byte
	unsigned char smac[6];  // 6 Byte
	unsigned short type;
	unsigned short tpid; 	// 2 Byte
	unsigned short vid; 	// 2 Byte
}__attribute__((__packed__)) eth_header;

typedef struct S_IP_HEADER
{
	unsigned char ip_v:4, ip_hl:4; /*this means that each member is 4 bits*/
	unsigned char ip_tos;
	unsigned short ip_len; // value : 28 -> this means ip header + udp header length
	unsigned short ip_id; //identification
	unsigned short ip_off;
	unsigned char ip_ttl;
	unsigned char ip_p; //protocol -> tcp : 6 , udp : 17
	unsigned short ip_sum;
	unsigned int ip_src;	//4 Byte
	unsigned int ip_dst;	//4 Byte
}__attribute__((__packed__)) ip_header;

typedef struct ARP_HEADER
{
	unsigned short arp_hr_type;// Hardware type
	unsigned short arp_p; // protocol
	unsigned char arp_hard_size; //Hardware size
	unsigned char arp_pro_size; // Protocol size
	unsigned short arp_opcode; //ARP opcode
	unsigned char arp_sender_mac[6]; //Sender mac address
	unsigned int arp_sender_ip; //Sender ip address
	unsigned char arp_target_mac[6]; //Target mac address
	unsigned int arp_target_ip; //Target ip address
}__attribute__((__packed__)) arp_header;





/*2293 0x08 0x2D*/
/*mac default 0x00 0x1c 0x7b 0x11 0x11 0x12*/
/*DHCP Discover buffer : docsis buffer*/
char DHCPdocsisBuf[] = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x1c, 
	0x7b, 0x11, 0x00, 0x00, 0x81, 0x00, 0x08, 0x01, 0x08, 0x00, 0x45, 0x00, 
	0x02, 0x18, 0xde, 0xad, 0x00, 0x00, 0x80, 0x11, 
	0x5a, 0x28, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
	0xff, 0xff, 0x00, 0x44, 0x00, 0x43, 0x02, 0x04, 
	0xcd, 0x21, 0x01, 0x01, 0x06, 0x00, 0x29, 0xd9, 
	0xaa, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 
	0x7b, 0x11, 0x11, 0x12, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x82, 
	0x53, 0x63, 0x35, 0x01, 0x01, 0x37, 0x09, 0x01, 
	0x02, 0x03, 0x04, 0x07, 0x06, 0x64, 0x7a, 0x7d, 
	0x3c, 0x0a, 0x64, 0x6f, 0x63, 0x73, 0x69, 0x73, 
	0x33, 0x2e, 0x30, 0x3a, 0x7d, 0x88, 0x00, 0x00, 
	0x11, 0x8b, 0x83, 0x01, 0x01, 0x02, 0x05, 0x7e, 
	0x01, 0x01, 0x01, 0x02, 0x01, 0x03, 0x03, 0x01, 
	0x01, 0x04, 0x01, 0x01, 0x05, 0x01, 0x01, 0x06, 
	0x01, 0x01, 0x07, 0x01, 0x0f, 0x08, 0x01, 0x10, 
	0x09, 0x01, 0x03, 0x0a, 0x01, 0x01, 0x0b, 0x01, 
	0x18, 0x0c, 0x01, 0x01, 0x0d, 0x02, 0x00, 0x40, 
	0x0e, 0x02, 0x00, 0x10, 0x0f, 0x01, 0x01, 0x10, 
	0x04, 0x00, 0x00, 0x00, 0x04, 0x11, 0x01, 0x00, 
	0x14, 0x01, 0x00, 0x15, 0x01, 0x3f, 0x16, 0x01, 
	0x01, 0x17, 0x01, 0x01, 0x18, 0x01, 0x04, 0x19, 
	0x01, 0x04, 0x1a, 0x01, 0x04, 0x1b, 0x01, 0x20, 
	0x1c, 0x01, 0x02, 0x1d, 0x01, 0x08, 0x1e, 0x01, 
	0x20, 0x1f, 0x01, 0x10, 0x20, 0x01, 0x10, 0x21, 
	0x01, 0x02, 0x22, 0x01, 0x01, 0x23, 0x01, 0x00, 
	0x24, 0x01, 0x00, 0x25, 0x01, 0x01, 0x26, 0x02, 
	0x00, 0xff, 0x27, 0x01, 0x00, 0x28, 0x01, 0x00, 
	0x2c, 0x04, 0x00, 0x00, 0x00, 0x01, 0x2b, 0x50, 
	0x02, 0x03, 0x45, 0x43, 0x4d, 0x03, 0x08, 0x45, 
	0x43, 0x4d, 0x3a, 0x45, 0x4d, 0x54, 0x41, 0x04, 
	0x00, 0x05, 0x04, 0x56, 0x31, 0x2e, 0x30, 0x06, 
	0x09, 0x35, 0x2e, 0x35, 0x2e, 0x31, 0x30, 0x6d, 
	0x70, 0x35, 0x07, 0x0a, 0x32, 0x2e, 0x34, 0x2e, 
	0x30, 0x62, 0x65, 0x74, 0x61, 0x33, 0x08, 0x06, 
	0x30, 0x30, 0x31, 0x30, 0x31, 0x38, 0x09, 0x0b, 
	0x42, 0x43, 0x4d, 0x39, 0x33, 0x33, 0x38, 0x33, 
	0x56, 0x43, 0x4d, 0x0a, 0x08, 0x42, 0x72, 0x6f, 
	0x61, 0x64, 0x63, 0x6f, 0x6d, 0xfe, 0x01, 0x08, 
	0x3d, 0x0f, 0xff, 0x7b, 0x11, 0x11, 0x12, 0x00, 
	0x03, 0x00, 0x01, 0x00, 0x1c, 0x7b, 0x11, 0x11, 
	0x12, 0x39, 0x02, 0x05, 0xdc, 0xff };


/*mac default : 0x00 0x1c 0x7b 0x22 0x22 0x24*/
/*DHCP Discover buffer : pktc buffer*/
char DHCPpktcBuf[] = {
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x1c, 
0x7b, 0x22, 0x00, 0x00, 0x81, 0x00, 0x08, 0x01, 
0x08, 0x00, 0x45, 0x00, 0x02, 0x07, 0xde, 0xad, 
0x00, 0x00, 0x80, 0x11, 0x5a, 0x39, 0x00, 0x00, 
0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x44, 
0x00, 0x43, 0x01, 0xf3, 0x81, 0xf6, 0x01, 0x01, 
0x06, 0x00, 0x4f, 0x8a, 0xe6, 0x24, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x1c, 0x7b, 0x22, 0x22, 0x23, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x63, 0x82, 0x53, 0x63, 0x35, 0x01, 
0x01, 0x37, 0x09, 0x01, 0x02, 0x03, 0x06, 0x07, 
0x0c, 0x0f, 0x36, 0x7a, 0x3c, 0x7a, 0x70, 0x6b, 
0x74, 0x63, 0x31, 0x2e, 0x35, 0x3a, 0x30, 0x35, 
0x33, 0x37, 0x30, 0x31, 0x30, 0x31, 0x30, 0x31, 
0x30, 0x32, 0x30, 0x31, 0x30, 0x32, 0x30, 0x39, 
0x30, 0x31, 0x30, 0x31, 0x30, 0x62, 0x30, 0x35, 
0x30, 0x36, 0x30, 0x39, 0x30, 0x65, 0x30, 0x64, 
0x30, 0x66, 0x30, 0x63, 0x30, 0x31, 0x30, 0x31, 
0x30, 0x64, 0x30, 0x31, 0x30, 0x31, 0x30, 0x66, 
0x30, 0x31, 0x30, 0x31, 0x31, 0x30, 0x30, 0x31, 
0x30, 0x39, 0x31, 0x32, 0x30, 0x32, 0x30, 0x30, 
0x30, 0x37, 0x31, 0x33, 0x30, 0x31, 0x30, 0x31, 
0x31, 0x34, 0x30, 0x31, 0x30, 0x31, 0x31, 0x35, 
0x30, 0x31, 0x30, 0x31, 0x31, 0x36, 0x30, 0x31, 
0x30, 0x31, 0x31, 0x37, 0x30, 0x33, 0x30, 0x32, 
0x30, 0x30, 0x33, 0x66, 0x31, 0x38, 0x30, 0x31, 
0x30, 0x30, 0x31, 0x39, 0x30, 0x31, 0x30, 0x30, 
0x2b, 0x59, 0x02, 0x04, 0x45, 0x4d, 0x54, 0x41, 
0x04, 0x06, 0x31, 0x31, 0x31, 0x31, 0x31, 0x32, 
0x05, 0x04, 0x56, 0x31, 0x2e, 0x30, 0x06, 0x0d, 
0x33, 0x2e, 0x39, 0x2e, 0x32, 0x31, 0x2e, 0x31, 
0x36, 0x6d, 0x70, 0x35, 0x20, 0x07, 0x0a, 0x32, 
0x2e, 0x34, 0x2e, 0x30, 0x62, 0x65, 0x74, 0x61, 
0x33, 0x08, 0x03, 0x00, 0x1c, 0x7b, 0x09, 0x0b, 
0x42, 0x43, 0x4d, 0x39, 0x33, 0x33, 0x38, 0x33, 
0x56, 0x43, 0x4d, 0x0a, 0x08, 0x42, 0x72, 0x6f, 
0x61, 0x64, 0x63, 0x6f, 0x6d, 0x1f, 0x06, 0x00, 
0x1c, 0x7b, 0x22, 0x22, 0x23, 0x20, 0x04, 0xd3, 
0x54, 0xb6, 0x5c, 0x3d, 0x0f, 0xff, 0x7b, 0x22, 
0x22, 0x23, 0x00, 0x03, 0x00, 0x01, 0x00, 0x1c, 
0x7b, 0x22, 0x22, 0x23, 0x39, 0x02, 0x05, 0xdc, 
0xff };


/*DHCP docsis offer packet*/
/*CM IP : 192.168.10.32*/
char DHCPdocsisBuf_offer[] = {
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc4, 0x12, 
0xf5, 0x30, 0x92, 0xf9, 0x08, 0x00, 0x45, 0x10, 
0x01, 0x7b, 0x00, 0x00, 0x00, 0x00, 0x80, 0x11, 
0xa3, 0xef, 0xc0, 0xa8, 0x0a, 0x02, 0xc0, 0xa8, 
0x0a, 0x20, 0x00, 0x43, 0x00, 0x44, 0x01, 0x67, 
0x33, 0x7d, 0x02, 0x01, 0x06, 0x00, 0x29, 0xd9, 
0xaa, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0xc0, 0xa8, 0x0a, 0x20, 0xc0, 0xa8, 
0x0a, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 
0x7b, 0x11, 0x11, 0x12, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x30, 
0x6b, 0x2e, 0x63, 0x66, 0x67, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x82, 
0x53, 0x63, 0x35, 0x01, 0x02, 0x36, 0x04, 0xc0, 
0xa8, 0x0a, 0x02, 0x33, 0x04, 0x00, 0x01, 0x51, 
0x80, 0x02, 0x04, 0x00, 0x00, 0x70, 0x80, 0x03, 
0x04, 0xc0, 0xa8, 0x0a, 0x01, 0x04, 0x04, 0xc0, 
0xa8, 0x0a, 0x02, 0x06, 0x08, 0xa8, 0x5f, 0x01, 
0x01, 0xc0, 0xa8, 0x0a, 0x02, 0x07, 0x04, 0xc0, 
0xa8, 0x0a, 0x02, 0x0f, 0x03, 0x6c, 0x61, 0x62, 
0x3a, 0x04, 0x00, 0x00, 0xa8, 0xc0, 0x3b, 0x04, 
0x00, 0x01, 0x27, 0x50, 0x7a, 0x24, 0x01, 0x04, 
0xc0, 0xa8, 0x0a, 0x02, 0x03, 0x11, 0x00, 0x0a, 
0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x32, 0x30, 
0x30, 0x38, 0x03, 0x6c, 0x61, 0x62, 0x00, 0x06, 
0x09, 0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x01, 
0x31, 0x00, 0x01, 0x04, 0xff, 0xff, 0xff, 0x00, 
0xff };


/*DHCP pktc offer packet*/
/*EMTA IP : 192.168.10.132*/
char DHCPpktcBuf_offer[] = {
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc4, 0x12, 
0xf5, 0x30, 0x92, 0xf9, 0x08, 0x00, 0x45, 0x10, 
0x01, 0x85, 0x00, 0x00, 0x00, 0x00, 0x80, 0x11, 
0xa3, 0x81, 0xc0, 0xa8, 0x0a, 0x02, 0xc0, 0xa8, 
0x0a, 0x84, 0x00, 0x43, 0x00, 0x44, 0x01, 0x71, 
0x0a, 0x8a, 0x02, 0x01, 0x06, 0x00, 0x4f, 0x8a, 
0xe6, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0xc0, 0xa8, 0x0a, 0x84, 0xc0, 0xa8, 
0x0a, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 
0x7b, 0x22, 0x22, 0x23, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x65, 0x75, 
0x73, 0x69, 0x70, 0x5f, 0x34, 0x30, 0x30, 0x30, 
0x2e, 0x62, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x82, 
0x53, 0x63, 0x35, 0x01, 0x02, 0x36, 0x04, 0xc0, 
0xa8, 0x0a, 0x02, 0x33, 0x04, 0x00, 0x01, 0x51, 
0x80, 0x02, 0x04, 0x00, 0x00, 0x70, 0x80, 0x03, 
0x04, 0xc0, 0xa8, 0x0a, 0x01, 0x04, 0x04, 0xc0, 
0xa8, 0x0a, 0x02, 0x06, 0x08, 0xa8, 0x5f, 0x01, 
0x01, 0xc0, 0xa8, 0x0a, 0x02, 0x07, 0x04, 0xc0, 
0xa8, 0x0a, 0x02, 0x0c, 0x08, 0x65, 0x6e, 0x74, 
0x61, 0x34, 0x30, 0x30, 0x30, 0x0f, 0x03, 0x6c, 
0x61, 0x62, 0x3a, 0x04, 0x00, 0x00, 0xa8, 0xc0, 
0x3b, 0x04, 0x00, 0x01, 0x27, 0x50, 0x7a, 0x24, 
0x01, 0x04, 0xc0, 0xa8, 0x0a, 0x02, 0x03, 0x11, 
0x00, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 
0x32, 0x30, 0x30, 0x38, 0x03, 0x6c, 0x61, 0x62, 
0x00, 0x06, 0x09, 0x05, 0x42, 0x41, 0x53, 0x49, 
0x43, 0x01, 0x31, 0x00, 0x01, 0x04, 0xff, 0xff, 
0xff, 0x00, 0xff };



/*Normal Send Packet(request[1])*/
/*Arp[0~5] -> Destination MAC
Arp[6~11] -> Source MAC*/
char ArpPacket[]  = {
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x1c, 
0x7b, 0x22, 0x00, 0x00, 0x81, 0x00, 0x08, 0x01,
0x08, 0x06, 0x00, 0x01, 0x08, 0x00, 0x06, 0x04, 
0x00, 0x01, 0x00, 0x1c, 0x7b, 0x22, 0x00, 0x00, 
0xc0, 0xa8, 0x0a, 0x84, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0xc0, 0xa8, 0x0a, 0x02, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, };




